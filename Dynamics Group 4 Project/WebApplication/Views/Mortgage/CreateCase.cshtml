@model DataAccessLayer.Models.MortgageCaseModel

@{
    ViewBag.Title = "Create a New Case";
}

<h2>Create a New Case</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            <div class="form-group">
            @Html.LabelFor(model => model.MortgageId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MortgageId, 
                                   new SelectList(ViewBag.UserMortgages, "Value", "Text"),
                                   "Select Mortgage",
                                   new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MortgageId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(
                    model => model.Priority,
                    "Select Priority",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="HighPrioDiv" style="display: none;">
            @Html.LabelFor(model => model.HighPriorityReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.HighPriorityReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HighPriorityReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(
                    model => model.Type,
                    "Select Type",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Case" class="btn btn-default" id="submitButton"/>
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Cancel", "Index", "Mortgage", new { }, null)*@
</div>

@section Scripts {
    @Styles.Render("~/Content/CustomCSS-CreateCase.css")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CustomJS-CreateCase.js")
}
